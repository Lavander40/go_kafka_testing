version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.app
    env_file:
      - .env
    container_name: app
    ports:
      - "${APP_PORT}:8090"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: postgres
      KAFKA_HOST: kafka
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
      kafka-init:
        condition: service_completed_successfully

  proseccor:
    container_name: processor
    build:
      context: .
      dockerfile: Dockerfile.processor
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: postgres
      KAFKA_HOST: kafka
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy

  migrator:
    container_name: migrator
    build:
      context: .
      dockerfile: Dockerfile.migrator
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: postgres
      MIGRATIONS_PATH: ./migrations
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres
    container_name: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: messages
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  zookeeper:
    image: bitnami/zookeeper
    container_name: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"

  kafka:
    image: bitnami/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD-SHELL", "kafka-broker-api-versions.sh --bootstrap-server kafka:9092"]
      interval: 30s
      timeout: 15s
      retries: 7
    depends_on:
      - zookeeper

  kafka-init:
    image: bitnami/kafka
    container_name: kafka-init
    depends_on:
      kafka:
        condition: service_healthy
    entrypoint: bash -c "kafka-topics.sh --create --topic messages --bootstrap-server kafka:9092 --partitions 1 --replication-factor 1"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092

volumes:
  postgres_data: